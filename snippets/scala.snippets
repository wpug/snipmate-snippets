# documentation: if the snippet is prefixed by lines that start "## ", those can be used by
# a pre-processor script to create a quickref. the idea is that you can print such a file
# out and have it for quick reference while learning how to use the snippets for that
# particular language.
#
snippet class
	class ${1:ClassName} {
		${2}
	}
## case class
snippet cclass
	case class ${1:ClassName} {
		${2}
	}
## case class
snippet cc
	case class ${1:ClassName}(${2})${3}
## case object
snippet co
	case object ${1:ObjName}
snippet trait
	trait ${1:TraitName} {
		${2}
	}
## singleton object
snippet object
	object ${1:ObjectName} {
		${2}
	}
## application trait
snippet app
	object ${1:ObjectName} extends App {
		${2}
	}
## main program
snippet prog
	object ${1:ObjectName} {
		def main(args: Array[String]): Unit = {
			${2}
		}
	}
## defines a type (e.g. structural)
snippet type
	type ${1} = {${2}}
## function definition
snippet fun
	def ${1:name}(${2}): ${3:Type} = ${4}
## procedure definition
snippet proc
	def ${1:name}(${2}): Unit = {
		${3}
	}
## if conditional
snippet if
	if (${1:condition}) {
	    ${2:// expression}
	}
snippet ife
	if (${1:condition}) {
	    ${2:// expr}
	} else {
	    ${3:// expr}
	}
snippet while
	while (${1:condition}) {
	    ${2:// expression}
	}
snippet try
	try {
	    ${2:// expression}
	} catch {
	    case e : ${1:Exception} => ${3:// expression}
	}
## try..catch..finally
snippet tfc
	try {
	    ${2:// expression}
	} catch {
	    case e : ${1:Exception} => ${3:// expression}
	} finally {
	  ${4:// expression}
	}
## private
snippet pr
	private${1} 
## scoped private
snippet pri
	private[${1:this}]
## protected
snippet pro
	protected 
## scoped protected
snippet prop
	protected[${1:this}]
snippet for
	for (${1} <- ${2}) {
	  ${3}
	}
snippet foreach
	foreach {${1} =>
	  ${2}
	}
snippet match
	match {
	  case ${1} => ${2}
	}
snippet case
	case ${1} => ${2}
## println
snippet p
	println(${1})
snippet main
	def main(args: Array[String]): Unit = {
	  ${1}
	}
## specifies arguments - x1
snippet 1tt
	(${1:el}: ${2:Type})
## specifies arguments - x2
snippet 2tt
	(${1:fst}: ${2:Type}, ${3:snd}: ${4:Type})
## specifies arguments - x3
snippet 3tt
	(${1:fst}: ${2:Type}, ${3:snd}: ${4:Type}, ${5:trd}: ${6:Type})
## specifies arguments - x2
snippet 2t
	(${1:fst}, ${2:snd})
## specifies arguments - x3
snippet 3t
	(${1:fst}, ${2:snd}, ${3:trd})
